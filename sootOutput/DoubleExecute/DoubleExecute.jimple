public class DoubleExecute extends java.lang.Object
{
    private static int secretId;

    public void <init>()
    {
        DoubleExecute r0;

        r0 := @this: DoubleExecute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r1, r2;
        int $i1, $i4, $i5, i6;
        java.sql.ResultSet r3;
        java.io.PrintStream $r4;
        java.sql.SQLException $r5, r8;
        java.lang.String[] r6;
        java.sql.Connection r7;
        boolean $z0;

        r6 := @parameter0: java.lang.String[];

     label1:
        r7 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>("jdbc:sqlite::memory:");

        r0 = interfaceinvoke r7.<java.sql.Connection: java.sql.Statement createStatement()>();

        interfaceinvoke r0.<java.sql.Statement: int executeUpdate(java.lang.String)>("create table person (id integer)");

        r1 = interfaceinvoke r7.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?)");

        $i1 = <DoubleExecute: int secretId>;

        interfaceinvoke r1.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i1);

        interfaceinvoke r1.<java.sql.PreparedStatement: int executeUpdate()>();

        interfaceinvoke r1.<java.sql.PreparedStatement: int executeUpdate()>();

        r2 = interfaceinvoke r7.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("select * from person");

        r3 = interfaceinvoke r2.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

        i6 = 0;

     label2:
        $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label3;

        $i4 = interfaceinvoke r3.<java.sql.ResultSet: int getInt(java.lang.String)>("id");

        $i5 = <DoubleExecute: int secretId>;

        if $i4 != $i5 goto label2;

        i6 = i6 + 1;

        goto label2;

     label3:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(int)>(i6);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r8 = $r5;

        virtualinvoke r8.<java.sql.SQLException: void printStackTrace()>();

     label6:
        return;

        catch java.sql.SQLException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        <DoubleExecute: int secretId> = 123456;

        return;
    }
}
