public class DoubleExecuteProcessed extends java.lang.Object
{
    private static int secretId;

    public void <init>()
    {
        DoubleExecuteProcessed r0, this;

        r0 := @this: DoubleExecuteProcessed;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r1, r2;
        int $i1, $i4, $i5, i6;
        java.util.Iterator r3;
        java.io.PrintStream $r4;
        java.sql.SQLException $r5, r8;
        java.lang.String[] r6;
        Connection r7;
        boolean $z0;
        DoubleExecuteProcessed this;
        util.Row rowLocalr3;

        r6 := @parameter0: java.lang.String[];

     label1:
        r7 = new Connection;

        specialinvoke r7.<Connection: void <init>()>();

        $i1 = <DoubleExecuteProcessed: int secretId>;

        specialinvoke r7.<Connection: void personInsertStatement(int)>($i1);

        specialinvoke r7.<Connection: void personInsertStatement(int)>($i1);

        r3 = virtualinvoke r7.<Connection: Iterator<PersonRow> personSelectStatement0()>();

        i6 = 0;

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        rowLocalr3 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i4 = virtualinvoke rowLocalr3.<util.Row: java.lang.String getParameter(int)>(0);

        $i5 = <DoubleExecuteProcessed: int secretId>;

        if $i4 != $i5 goto label2;

        i6 = i6 + 1;

        goto label2;

     label3:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(int)>(i6);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r8 = $r5;

        virtualinvoke r8.<java.sql.SQLException: void printStackTrace()>();

     label6:
        return;

        catch java.sql.SQLException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        DoubleExecuteProcessed this;

        <DoubleExecuteProcessed: int secretId> = 123456;

        return;
    }
}
