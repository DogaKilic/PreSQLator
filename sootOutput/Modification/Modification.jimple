public class Modification extends java.lang.Object
{

    public void <init>()
    {
        Modification r0;

        r0 := @this: Modification;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r1, r2, r10, r11, r12;
        java.lang.String[] r3;
        java.lang.String $r4;
        java.lang.Integer $r5;
        int $i3, $i5;
        java.sql.ResultSet r6;
        java.io.PrintStream $r7;
        java.sql.SQLException $r8, r13;
        java.sql.Connection r9;
        boolean $z0;

        r3 := @parameter0: java.lang.String[];

     label1:
        r9 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>("jdbc:sqlite::memory:");

        r0 = interfaceinvoke r9.<java.sql.Connection: java.sql.Statement createStatement()>();

        interfaceinvoke r0.<java.sql.Statement: int executeUpdate(java.lang.String)>("create table person (id integer)");

        r1 = interfaceinvoke r9.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?)");

        interfaceinvoke r1.<java.sql.PreparedStatement: void setInt(int,int)>(1, 111111);

        interfaceinvoke r1.<java.sql.PreparedStatement: int executeUpdate()>();

        r2 = interfaceinvoke r9.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?)");

        interfaceinvoke r2.<java.sql.PreparedStatement: void setInt(int,int)>(1, 222222);

        interfaceinvoke r2.<java.sql.PreparedStatement: int executeUpdate()>();

        $r4 = r3[0];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        $i3 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i3 <= 0 goto label2;

        r10 = interfaceinvoke r9.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("update person set id=333333 where id=111111");

        interfaceinvoke r10.<java.sql.PreparedStatement: int executeUpdate()>();

        goto label3;

     label2:
        r11 = interfaceinvoke r9.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("update person set id=333333 where id=222222");

        interfaceinvoke r11.<java.sql.PreparedStatement: int executeUpdate()>();

     label3:
        r12 = interfaceinvoke r9.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("select * from person");

        r6 = interfaceinvoke r12.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

     label4:
        $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label5;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $i5 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(java.lang.String)>("id");

        virtualinvoke $r7.<java.io.PrintStream: void println(int)>($i5);

        goto label4;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        r13 = $r8;

        virtualinvoke r13.<java.sql.SQLException: void printStackTrace()>();

     label7:
        return;

        catch java.sql.SQLException from label1 to label5 with label6;
    }
}
