public class Multiples extends java.lang.Object
{
    private static java.lang.String secretName;

    public void <init>()
    {
        Multiples r0;

        r0 := @this: Multiples;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r1, r2, r3, r7, r8, r9, r10;
        java.lang.String $r4, $r5, $r6, $r15, $r17;
        java.sql.ResultSet r11;
        boolean $z0;
        java.lang.StringBuilder $r12, $r14, $r16;
        java.io.PrintStream $r13;
        java.sql.SQLException $r18, r21;
        java.lang.String[] r19;
        java.sql.Connection r20;

        r19 := @parameter0: java.lang.String[];

     label1:
        r20 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>("jdbc:sqlite::memory:");

        r0 = interfaceinvoke r20.<java.sql.Connection: java.sql.Statement createStatement()>();

        interfaceinvoke r0.<java.sql.Statement: int executeUpdate(java.lang.String)>("create table person (id integer, name string)");

        r1 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?, ?)");

        r2 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?, ?)");

        r3 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?, ?)");

        interfaceinvoke r1.<java.sql.PreparedStatement: void setInt(int,int)>(1, 1);

        $r4 = <Multiples: java.lang.String secretName>;

        interfaceinvoke r1.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r4);

        interfaceinvoke r1.<java.sql.PreparedStatement: int executeUpdate()>();

        interfaceinvoke r2.<java.sql.PreparedStatement: void setInt(int,int)>(1, 2);

        $r5 = <Multiples: java.lang.String secretName>;

        interfaceinvoke r2.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r5);

        interfaceinvoke r2.<java.sql.PreparedStatement: int executeUpdate()>();

        interfaceinvoke r3.<java.sql.PreparedStatement: void setInt(int,int)>(1, 3);

        $r6 = <Multiples: java.lang.String secretName>;

        interfaceinvoke r3.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r6);

        interfaceinvoke r3.<java.sql.PreparedStatement: int executeUpdate()>();

        r7 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("update person set name = \'Kevin\' where id=1");

        interfaceinvoke r7.<java.sql.PreparedStatement: int executeUpdate()>();

        r8 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("update person set name = \'Alex\' where id=2");

        interfaceinvoke r8.<java.sql.PreparedStatement: int executeUpdate()>();

        r9 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("update person set name = \'Niko\' where id=3");

        interfaceinvoke r9.<java.sql.PreparedStatement: int executeUpdate()>();

        r10 = interfaceinvoke r20.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("select * from person");

        r11 = interfaceinvoke r10.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

     label2:
        $z0 = interfaceinvoke r11.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label3;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name = ");

        $r15 = interfaceinvoke r11.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("name");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label2;

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        r21 = $r18;

     label5:
        return;

        catch java.sql.SQLException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        <Multiples: java.lang.String secretName> = "Hans";

        return;
    }
}
