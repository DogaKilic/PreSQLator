public class MultiplesProcessed extends java.lang.Object
{
    private static java.lang.String secretName;

    public void <init>()
    {
        MultiplesProcessed r0, this;

        r0 := @this: MultiplesProcessed;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r1, r2, r3, r7, r8, r9, r10;
        java.lang.String $r4, $r5, $r6, $r15, $r17;
        java.util.Iterator r11;
        boolean $z0;
        java.lang.StringBuilder $r12, $r14, $r16;
        java.io.PrintStream $r13;
        java.sql.SQLException $r18, r21;
        java.lang.String[] r19;
        Connection r20;
        MultiplesProcessed this;
        int param, param, param;
        util.Row rowLocalr11;

        r19 := @parameter0: java.lang.String[];

     label1:
        r20 = new Connection;

        specialinvoke r20.<Connection: void <init>()>();

        $r4 = <MultiplesProcessed: java.lang.String secretName>;

        param = 1;

        specialinvoke r20.<Connection: void personInsertStatement(int,java.lang.String)>(param, $r4);

        $r5 = <MultiplesProcessed: java.lang.String secretName>;

        param = 2;

        specialinvoke r20.<Connection: void personInsertStatement(int,java.lang.String)>(param, $r5);

        $r6 = <MultiplesProcessed: java.lang.String secretName>;

        param = 3;

        specialinvoke r20.<Connection: void personInsertStatement(int,java.lang.String)>(param, $r6);

        specialinvoke r20.<Connection: void personUpdateStatement0()>();

        specialinvoke r20.<Connection: void personUpdateStatement1()>();

        specialinvoke r20.<Connection: void personUpdateStatement2()>();

        r11 = virtualinvoke r20.<Connection: Iterator<PersonRow> personSelectStatement0()>();

     label2:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name = ");

        rowLocalr11 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r15 = virtualinvoke rowLocalr11.<util.Row: java.lang.String getParameter(int)>(1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label2;

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        r21 = $r18;

     label5:
        return;

        catch java.sql.SQLException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        MultiplesProcessed this;

        <MultiplesProcessed: java.lang.String secretName> = "Hans";

        return;
    }
}
