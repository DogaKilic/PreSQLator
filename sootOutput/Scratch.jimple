public class Scratch extends java.lang.Object
{
    public java.util.LinkedList list;
    public static int secretId;
    public static java.lang.String secretName;

    public void <init>()
    {
        Scratch r0;
        java.util.LinkedList $r1;

        r0 := @this: Scratch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<Scratch: java.util.LinkedList list> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.sql.Statement r0;
        java.sql.PreparedStatement r3, r4;
        int $i2;
        java.lang.String $r5, $r10, $r12;
        java.sql.ResultSet r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.io.PrintStream $r8;
        java.sql.SQLException $r13, r16;
        java.lang.String[] r14;
        java.sql.Connection r15;

        r14 := @parameter0: java.lang.String[];

     label1:
        r15 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>("jdbc:sqlite::memory:");

        r0 = interfaceinvoke r15.<java.sql.Connection: java.sql.Statement createStatement()>();

        interfaceinvoke r0.<java.sql.Statement: int executeUpdate(java.lang.String)>("create table person (id integer, name string)");

        interfaceinvoke r0.<java.sql.Statement: int executeUpdate(java.lang.String)>("create table dog (petid integer, age integer , name string)");

        interfaceinvoke r15.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into dog values(?, ?, ?)");

        interfaceinvoke r15.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("select * from dog");

        r3 = interfaceinvoke r15.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("insert into person values(?, ?)");

        r4 = interfaceinvoke r15.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("select * from person");

        $i2 = <Scratch: int secretId>;

        interfaceinvoke r3.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i2);

        $r5 = <Scratch: java.lang.String secretName>;

        interfaceinvoke r3.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r5);

        interfaceinvoke r3.<java.sql.PreparedStatement: int executeUpdate()>();

        r6 = interfaceinvoke r4.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

     label2:
        $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label3;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name = ");

        $r10 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("name");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        goto label2;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r16 = $r13;

     label5:
        return;

        catch java.sql.SQLException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        <Scratch: int secretId> = 1;

        <Scratch: java.lang.String secretName> = "Hans";

        return;
    }
}
